{
	"info": {
		"_postman_id": "f58abf4e-9f54-450f-9463-cbb276310bfa",
		"name": "Clients",
		"description": "Different test to test the bookstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET-clients",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients"
					]
				},
				"description": "Using GET to get all clients"
			},
			"response": []
		},
		{
			"name": "POST-clients",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3cea504-ffa4-475e-b245-cbcdbb607d91",
						"exec": [
							"if (!pm.environment.has(\"mockClients\")) {\r",
							"  let mockClients = [\r",
							"      {\r",
							"          \"email\":\"hejsvejs@hoho.se\"\r",
							"      },\r",
							"      {\r",
							"          \"email\":\"kungen99@star.com\"\r",
							"      },\r",
							"      {\r",
							"          \"email\":\"richiewho@gmail.com\"\r",
							"      }\r",
							"  ]\r",
							"  pm.environment.set(\"counter\", 0);\r",
							"  pm.environment.set(\"mockClients\", JSON.stringify(mockClients));\r",
							"}\r",
							"// Reading/parsing environment variables back to local variables\r",
							"let counter = pm.environment.get(\"counter\") / 1;\r",
							"let mockClients = JSON.parse(pm.environment.get(\"mockClients\"));\r",
							"let {email} = mockClients[counter]\r",
							"// Save to environemnt for use in query\r",
							"pm.environment.set('email', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2732bbcb-108e-462c-a4d4-8020ee57703d",
						"exec": [
							"let response = pm.response.json();\r",
							"let counter = pm.environment.get(\"counter\") / 1;\r",
							"let mockClients = JSON.parse(pm.environment.get(\"mockClients\"));\r",
							"\r",
							"mockClients[counter].id = response.insertId;\r",
							"pm.environment.set('mockClients', JSON.stringify(mockClients)); \r",
							"\r",
							"\r",
							"pm.test(\"Check for value in response\", function () {\r",
							"    pm.expect(response.lastID).to.be.a('number');\r",
							"});\r",
							"\r",
							"pm.test(\"Check for number of changes in response\", function () {\r",
							"    pm.expect(response.changes).to.exist;\r",
							"});\r",
							"\r",
							"counter++;\r",
							"pm.environment.set('counter', counter);\r",
							"\r",
							"if(counter===3){\r",
							"    counter=0;\r",
							"}\r",
							"\r",
							"if (mockClients[counter]) {\r",
							"    postman.setNextRequest(\"POST-clients\");\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"{{email}}\"\n}\n\n\n\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients"
					]
				},
				"description": "Create 3 new clients"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}