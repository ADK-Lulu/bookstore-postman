{
	"info": {
		"_postman_id": "8ac70d54-4486-4084-b09d-887c6d69829b",
		"name": "Clients",
		"description": "Different test to test the bookstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET-clients",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients"
					]
				},
				"description": "Using GET to get all clients"
			},
			"response": []
		},
		{
			"name": "POST-clients",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "910d4294-9f8d-498b-8034-6f91ee9a788a",
						"exec": [
							"if (!pm.environment.has(\"mockClients\")) {\r",
							"  let mockClients = [\r",
							"      {\r",
							"          \"email\":\"hejsvejs@hoho.se\"\r",
							"      },\r",
							"      {\r",
							"          \"email\":\"kungen99@star.com\"\r",
							"      },\r",
							"      {\r",
							"          \"email\":\"richiewho@gmail.com\"\r",
							"      }\r",
							"  ]\r",
							"  pm.environment.set(\"counter\", 0);\r",
							"  pm.environment.set(\"mockClients\", JSON.stringify(mockClients));\r",
							"}\r",
							"// Reading/parsing environment variables back to local variables\r",
							"let counter = pm.environment.get(\"counter\") / 1;\r",
							"let mockClients = JSON.parse(pm.environment.get(\"mockClients\"));\r",
							"let {email} = mockClients[counter]\r",
							"// Save to environemnt for use in query\r",
							"pm.environment.set('email', email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c5a61bdf-9859-4708-9bc1-df0da40798ad",
						"exec": [
							"let response = pm.response.json();\r",
							"let counter = pm.environment.get(\"counter\") / 1;\r",
							"let mockClients = JSON.parse(pm.environment.get(\"mockClients\"));\r",
							"\r",
							"mockClients[counter].id = response.insertId;\r",
							"pm.environment.set('mockClients', JSON.stringify(mockClients)); \r",
							"\r",
							"\r",
							"pm.test(\"Check for value in response\", function () {\r",
							"    pm.expect(response.lastID).to.be.a('number');\r",
							"});\r",
							"\r",
							"pm.test(\"Check for number of changes in response\", function () {\r",
							"    pm.expect(response.changes).to.exist;\r",
							"});\r",
							"\r",
							"counter++;\r",
							"pm.environment.set('counter', counter);\r",
							"\r",
							"// Run request again if more mockdata\r",
							"if(mockClients[counter]){\r",
							"    postman.setNextRequest(\"POST-clients\");\r",
							"}\r",
							"\r",
							"else {\r",
							"  pm.environment.set(\"counter\", 0); } "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"{{email}}\"\n}\n\n\n\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients"
					]
				},
				"description": "Create 3 new clients"
			},
			"response": []
		},
		{
			"name": "GET-lastClient",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eaf0467f-0de9-4c0f-8f7c-2608e00475f4",
						"exec": [
							"let response = pm.response.json();\r",
							"console.log(\"i lastClient\", response)\r",
							"let lastClient= response.pop();\r",
							"\r",
							"let lastClientId=lastClient.id;\r",
							"pm.environment.set('lastClientId', lastClientId);\r",
							"\r",
							"pm.test('Correct status', function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('ID exists', function(){\r",
							"    pm.expect(lastClientId).to.exist; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/clients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT-clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de041b06-d57d-4be2-9a44-7b446246a2fc",
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"let lastClientID = pm.environment.get(\"lastClientId\");\r",
							"\r",
							"pm.test('correct change-value', function (){\r",
							"    pm.expect(response.changes).to.equal(1);\r",
							"});\r",
							"\r",
							"pm.test('changing the last one', function (){\r",
							"    pm.expect(response.lastID).to.equal(lastClientID);\r",
							"});\r",
							"\r",
							"pm.test('Correct status', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1c0a12e9-67e9-45db-b39b-1ad266008459",
						"exec": [
							"if(!pm.environment.has(\"lastClientId\")){\r",
							"    postman.setNextRequest(\"GET-lastClient\");\r",
							"}\r",
							"\r",
							"pm.environment.set(\"lastClientId\", pm.environment.get(\"lastClientId\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "",
						"type": "text",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"marit@master.se\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients/{{lastClientId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients",
						"{{lastClientId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Tests with DELETE clients"
			},
			"response": []
		},
		{
			"name": "GET-clients after PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e2681f7-db8f-47c1-9517-18016a656374",
						"exec": [
							"let response = pm.response.json();\r",
							"let lastClientID = pm.environment.get(\"lastClientId\");\r",
							"\r",
							"pm.test('Did we change the last objects email?', function (){\r",
							"    pm.expect(response[0]).to.have.property('email', \"marit@master.se\");\r",
							"});\r",
							"\r",
							"pm.test('Correct status', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c4ef1c2d-f32c-4e4c-855f-90a6a412a17e",
						"exec": [
							"if(!pm.environment.has(\"lastClientId\")){\r",
							"    postman.setNextRequest(\"GET-lastClient\");\r",
							"}\r",
							"\r",
							"pm.environment.set(\"lastClientId\", pm.environment.get(\"lastClientId\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"type": "text",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients/{{lastClientId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients",
						"{{lastClientId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Tests with DELETE clients"
			},
			"response": []
		},
		{
			"name": "DELETE-clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5ce4f27-bffb-4fce-b684-3951957d1c7d",
						"exec": [
							"let response = pm.response.json();\r",
							"let lastClientID = pm.environment.get(\"lastClientId\");\r",
							"\r",
							"pm.test('correct change', function (){\r",
							"    pm.expect(response.changes).to.equal(1);\r",
							"});\r",
							"\r",
							"pm.test('Correct status', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Correct lastID', function(){\r",
							"    pm.expect(response.lastID).to.equal(lastClientID);\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "83705052-8bf9-4f96-a7f8-e56bb355e522",
						"exec": [
							"if(!pm.environment.has(\"lastClientId\")){\r",
							"    postman.setNextRequest(\"GET-lastClient\");\r",
							"}\r",
							"\r",
							"pm.environment.set(\"lastClientId\", pm.environment.get(\"lastClientId\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clients/{{lastClientId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clients",
						"{{lastClientId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Tests with DELETE clients"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "980f2496-9116-40a5-9838-8247f9979cf6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "25e10a14-d425-4b91-9693-0e0999bedd8c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "682c4812-ef18-4afc-b1ef-c34fca1dc91d",
			"key": "id",
			"value": "",
			"type": "string"
		},
		{
			"id": "dd93765d-e27f-4b86-8511-1a08c5a4cd2e",
			"key": "lastClientId",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}